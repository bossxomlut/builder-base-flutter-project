import 'dart:convert';
import 'dart:io';

import 'package:path_provider/path_provider.dart';

/// H√†m l·∫•y ƒë∆∞·ªùng d·∫´n ƒë·∫øn th∆∞ m·ª•c l∆∞u tr·ªØ t√†i li·ªáu c·ªßa ·ª©ng d·ª•ng.
Future<String> getFilePath(String fileName) async {
  final directory = await getApplicationDocumentsDirectory();
  //print
  print('${directory.path}/$fileName');
  return '${directory.path}/$fileName';
}

/// Ki·ªÉm tra t·ªìn t·∫°i file
Future<bool> checkFileExists(String fileName) async {
  final filePath = await getFilePath(fileName);
  final file = File(filePath);
  return await file.exists();
}

/// T·∫°o file
Future<File> createFile(String fileName) async {
  final filePath = await getFilePath(fileName);
  final file = File(filePath);
  return file.create();
}

/// üìå Chuy·ªÉn ƒë·ªïi ·∫£nh th√†nh chu·ªói Base64
Future<String> convertImageToBase64(String imagePath) async {
  File imageFile = File(imagePath);

  if (!await imageFile.exists()) {
    throw Exception("‚ö†Ô∏è File kh√¥ng t·ªìn t·∫°i!");
  }

  List<int> imageBytes = await imageFile.readAsBytes();
  return base64Encode(imageBytes);
}

/// üìå Chuy·ªÉn ƒë·ªïi chu·ªói Base64 th√†nh file ·∫£nh
Future<void> convertBase64ToImage(String base64String, String outputPath) async {
  List<int> imageBytes = base64Decode(base64String);
  File outputFile = File(outputPath);
  await outputFile.writeAsBytes(imageBytes);
}
